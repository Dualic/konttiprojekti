apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: postgresdb
  POSTGRES_USER: postgresadmin
  POSTGRES_PASSWORD: admin123
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: postgres-pv-volume
  labels:
    type: local
    app: postgres
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/var/lib/data"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:10.4
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: flask-python-service
  labels:
    app: "flask-python"
spec:
  type: LoadBalancer
  ports:
   - port: 80
  selector:
   app: "flask-python"
---

apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "flask-python"
  namespace: "default"
  labels:
    app: "flask-python"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: "flask-python"
  template:
    metadata:
      labels:
        app: "flask-python"
    spec:
      containers:
      - name: "flaskapp-1"
        image: "gcr.io/group2-320408/flaskapp:latest"
---

apiVersion: "autoscaling/v2beta1"
kind: "HorizontalPodAutoscaler"
metadata:
  name: "flask-python-hpa-t30t"
  namespace: "default"
  labels:
    app: "flask-python"
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "flask-python"
    apiVersion: "apps/v1"
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: "Resource"
    resource:
      name: "cpu"
      targetAverageUtilization: 80

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: LoadBalancer
  loadBalancerIP: 35.228.26.155
  ports:
   - port: 5432
  selector:
   app: postgres